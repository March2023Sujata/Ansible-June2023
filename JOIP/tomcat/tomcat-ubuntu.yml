---
- name: Install tomcat 10 on Ubuntu
  become: true
  hosts: tomcat
  tasks:
    - name: Check if the playbook is being executed on supported os
      ansible.builtin.fail:
        msg: "This playbook is designed to work on ubuntu only"
      when: ansible_facts['distribution'] != "Ubuntu"
      tags:
        - check

    - name: Install java 11
      ansible.builtin.apt:
        name: "{{ java_package }}"
        update_cache: yes  
        state: present
        tags:
          - java
          - prereq

    - name: Create group
      ansible.builtin.group:
        name: "{{ group }}"
        state: present
        tags:
          - user
          - config

    - name: Create User
      ansible.builtin.user:
        name: "{{ user }}"
        create_home: true
        home: "{{ home_dir }}"
        shell: "{{ shell }}"
        group: "{{ group }}"
        tags:
          - user
          - config

    - name: Download tomcat
      ansible.builtin.get_url:
        url: "{{ tomcat_url }}"
        dest: "{{ download_dir}}"
        tags:
          - tomcat
          - config
    
    - name: Find if the tomcat is already extracted
      ansible.builtin.stat:
        path: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
      register: tomcat_info
      tags:
        - tomcat
        - config

    - name: Extract tomcat
      ansible.builtin.unarchive:
        src: "{{ download_dir}}"
        dest: "{{ home_dir }}"
        remote_src: yes
      when: not tomcat_info.stat.exists
      tags:
        - tomcat
        - config

    - name: Create a symbolic link(soft link--point to the original file)
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ home_dir }}/latest"
        state: link
      notify:
        - Change the directory ownership
        - Add execute permissions for shell scripts
      tags:
        - tomcat
        - config     

    - name: Flush Handlers 
      meta: flush_handlers
      tags:
        - tomcat
        - config
    
    - name: Copy tomcat.service file 
      ansible.builtin.template:
        src: tomcat.service.j2
        dest: /etc/systemd/system/tomcat.service
      notify: daemon reload
      tags:
        - tomcat
        - config

    - name: Enable tomcat
      ansible.builtin.systemd:
        name: tomcat
        enabled: true
        state: started
      tags:
        - tomcat
        - config

    - name: Configure the tomcat users xml
      ansible.builtin.template:
        src: tomcat-users.xml.j2
        dest: "{{ home_dir }}/latest/conf/tomcat-users.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
      notify: restart tomcat
      tags:
        - tomcat
        - config

    - name: Configure the tomcat context xml for manager app
      ansible.builtin.template:
        src: context.xml.j2
        dest: "{{ home_dir }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
      notify: restart tomcat
      tags:
        - tomcat
        - config

    - name: Configure the tomcat context xml for host manager app
      ansible.builtin.template:
        src: context.xml.j2
        dest: "{{ home_dir }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
      notify: restart tomcat
      tags:
        - tomcat
        - config

  handlers: 
    - name: daemon reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Change the directory ownership
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
        recurse: yes
        owner: "{{ user }}"
        group: "{{ group }}"

    - name: Add execute permissions for shell scripts
      ansible.builtin.shell:
        cmd: "chmod +x {{ home_dir }}/latest/bin/*.sh"

    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat
        state: restarted
    
